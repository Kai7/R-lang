qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
gen_tstat_binom(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
gen_tstat_binom(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
gen_tstat_binom(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
gen_tstat_binom(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
tt1 <- replicate(B, gen_tstat_binom(500))
gen_tstat_binom(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
gen_tstat_binom(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
mypar(1,1)
gen_tstat_binom <- function(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
gen_tstat_binom <- function(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(0, 1, col = 2)
?qt
mypar(1,1)
gen_tstat_binom <- function(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(15*0.5, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(500*0.5, 1, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
abline(sqrt(500)*500*0.5/sqrt(0.5*0.5), 1, col = 2)
mypar(1,1)
gen_tstat_binom <- function(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(t_sample, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(t_sample, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 500-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(t_sample, col = 2)
mypar(1,1)
gen_tstat_binom <- function(n){
X <- rbinom(n, size = 1, prob = 0.5)
tstat <- sqrt(n)*mean(X)/sd(X)
return(tstat)
}
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(15))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 15-1), t_sample, main=paste("degrees of freedom = ", 15-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(t_sample, col = 2)
set.seed(1)
t_sample <- replicate(B, gen_tstat_binom(500))
ps <- (seq(0,B-1)+0.5)/B
qqplot(qt(ps, df = 500-1), t_sample, main=paste("degrees of freedom = ", 500-1),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(t_sample, col = 2)
gen_median(n){
X <- rnorm(n)
return(median(X))
}
set.seed(1)
m_smp_small <- replicate(B, gen_median(10))
m_smp_large <- replicate(B, gen_median(100))
gen_median <- function(n){
X <- rnorm(n)
return(median(X))
}
set.seed(1)
m_smp_small <- replicate(B, gen_median(10))
m_smp_large <- replicate(B, gen_median(100))
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), main=paste("Check small sample median ~ N(0,1/sqrt(N))"),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), main=paste("Check large sample median ~ N(0,1/sqrt(N))"),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Check small sample median ~ N(0,1/sqrt(N))"),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(m_smp_small, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Check large sample median ~ N(0,1/sqrt(N))"),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(m_smp_large, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(m_smp_small, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Theoretical Quantiles", ylab = "Sample Quantiles")
qqline(m_smp_large, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Norm Quantiles", ylab = "Small Sample Quantiles")
qqline(m_smp_small, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Norm Quantiles", ylab = "Large Sample Quantiles")
qqline(m_smp_large, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Norm Quantiles", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Norm Quantiles", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Norm Quantiles", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Norm Quantiles", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqnorm(m_smp_small)
qqline(m_smp_small, col = 2)
qqnorm(m_smp_large)
qqline(m_smp_large, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Norm Quantiles", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Norm Quantiles", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqnorm(m_smp_small)
qqline(m_smp_small, col = 2)
qqnorm(m_smp_large)
qqline(m_smp_large, col = 2)
mypar(1,2)
qqnorm(m_smp_small, main=paste("Small Sample"),
xlab = "Standard Norm Quantiles", ylab = "Small Sample Quantiles")
qqline(m_smp_small, col = 2)
qqnorm(m_smp_large, main=paste("Large Sample"),
xlab = "Standard Norm Quantiles", ylab = "Large Sample Quantiles")
qqline(m_smp_large, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Norm Quantiles", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Norm Quantiles", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqnorm(m_smp_small, main=paste("Small Sample"),
xlab = "Standard Norm Quantiles", ylab = "Small Sample Quantiles")
qqline(m_smp_small, col = 2)
qqnorm(m_smp_large, main=paste("Large Sample"),
xlab = "Standard Norm Quantiles", ylab = "Large Sample Quantiles")
qqline(m_smp_large, col = 2)
mypar(1,2)
qqnorm(qt(ps, df = 10-1),m_smp_small, main=paste("Small Sample"),
xlab = "T Quantiles (df = 9)", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqnorm(qt(ps, df = 100-1),m_smp_large, main=paste("Large Sample"),
xlab = "T Quantiles (df = 99)", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqplot(qt(ps, df = 10-1),m_smp_small, main=paste("Small Sample"),
xlab = "T Quantiles (df = 9)", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qt(ps, df = 100-1),m_smp_large, main=paste("Large Sample"),
xlab = "T Quantiles (df = 99)", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
qqplot(qt(ps, df = 100-1),qnorm(ps, mean = 0, sd = 1/sqrt(100)), main=paste("T ~ Norm"),
xlab = "T Quantiles (df = 99)", ylab = "Norm Quantiles")
abline(0, 1, col = 2)
qqplot(qt(ps, df = 100-1),qnorm(ps), main=paste("T ~ Norm"),
mypar(1,1)
qqplot(qt(ps, df = 100-1),qnorm(ps), main=paste("T ~ Norm"),
xlab = "T Quantiles (df = 99)", ylab = "Norm Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
qqplot(qt(ps, df = 100-1),qnorm(ps), main=paste("T ~ Norm"),
xlab = "T Quantiles (df = 99)", ylab = "Norm Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
qqplot(qt(ps, df = 5),qnorm(ps), main=paste("T ~ Norm"),
xlab = "T Quantiles (df = 99)", ylab = "Norm Quantiles")
abline(0, 1, col = 2)
mypar(1,1)
qqplot(qt(ps, df = 30),qnorm(ps), main=paste("T ~ Norm"),
xlab = "T Quantiles (df = 99)", ylab = "Norm Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqplot(qt(ps, df = 10-1),m_smp_small, main=paste("Small Sample"),
xlab = "T Quantiles (df = 9)", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qt(ps, df = 100-1),m_smp_large, main=paste("Large Sample"),
xlab = "T Quantiles (df = 99)", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
mypar(1,2)
qqnorm(m_smp_small, main=paste("Small Sample"),
xlab = "Standard Norm Quantiles", ylab = "Small Sample Quantiles")
qqline(m_smp_small, col = 2)
qqnorm(m_smp_large, main=paste("Large Sample"),
xlab = "Standard Norm Quantiles", ylab = "Large Sample Quantiles")
qqline(m_smp_large, col = 2)
mypar(1,2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(10)), m_smp_small, main=paste("Small Sample"),
xlab = "Norm Quantiles", ylab = "Small Sample Quantiles")
abline(0, 1, col = 2)
qqplot(qnorm(ps, mean = 0, sd = 1/sqrt(100)), m_smp_large, main=paste("Large Sample"),
xlab = "Norm Quantiles", ylab = "Large Sample Quantiles")
abline(0, 1, col = 2)
getwd()
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile = filename)
babies <- read.table("babies.txt", header = TRUE)
bwt.nonsmoke <- filter(babies, smoke == 0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke == 1) %>% select(bwt) %>% unlist
library(rafalib)
library(dplyr)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile = filename)
babies <- read.table("babies.txt", header = TRUE)
bwt.nonsmoke <- filter(babies, smoke == 0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke == 1) %>% select(bwt) %>% unlist
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download.file(url, destfile = filename)
babies <- read.table("babies.txt", header = TRUE)
bwt.nonsmoke <- filter(babies, smoke == 0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke == 1) %>% select(bwt) %>% unlist
bwt.nonsmoke
bwt.smoke
N <- 10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar) - mean(nonsmokersstar)
mean(bwt.nonsmoke) - mean(bwt.smoke)
gen_diff_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
X_permut <- replicate(1000, gen_diff_permut())
X_permut
hist(X_permut)
p_val <- mean(abs(X_permut) > obs)
round(p_val)
abs(X_permut)
obs
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val)
mean(abs(X_permut) > abs(obs))
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
gen_diff_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
X_permut <- replicate(1000, gen_diff_permut())
gen_diff_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
X_permut <- replicate(1000, gen_diff_permut())
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
obs <- median(smokers) - median(nonsmokers)
gen_diff_median_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar) - median(nonsmokersstar))
}
X_permut <- replicate(1000, gen_diff_median_permut())
hist(X_permut)
hist(X_permut)
hist(X_permut)
gen_diff_mean_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
set.seed(1)
X_permut <- replicate(1000, gen_diff_mean_permut())
hist(X_permut)
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
obs <- median(smokers) - median(nonsmokers)
gen_diff_median_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar) - median(nonsmokersstar))
}
set.seed(1)
X_permut <- replicate(1000, gen_diff_median_permut())
hist(X_permut)
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
obs
gen_diff_mean_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
set.seed(1)
X_permut <- replicate(1000, gen_diff_mean_permut())
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar) - mean(nonsmokersstar)
gen_diff_mean_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
set.seed(1)
X_permut <- replicate(1000, gen_diff_mean_permut())
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
N <- 10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar) - mean(nonsmokersstar)
gen_diff_mean_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(mean(smokersstar) - mean(nonsmokersstar))
}
set.seed(1)
X_permut <- replicate(1000, gen_diff_mean_permut())
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
obs <- median(smokers) - median(nonsmokers)
gen_diff_median_permut <- function(){
shuffle <- sample(dat)
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
return(median(smokersstar) - median(nonsmokersstar))
}
set.seed(1)
X_permut <- replicate(1000, gen_diff_median_permut())
p_val <- mean(abs(X_permut) > abs(obs))
round(p_val, 4)
obs <- sd(smokers) - sd(nonsmokers)
gen_diff_sd_bootstrap <- function(){
smokersstar <- sample(smokers, N, replace = TRUE)
nonsmokersstar <- sample(nonsmokers, N, replace = TRUE)
return(sd(smokersstar) - sd(nonsmokersstar))
}
set.seed(1)
X_bootstrap <- replicate(1000, gen_diff_sd_bootstrap())
hist(X_bootstrap)
sd(X_bootstrap)
round(sd(X_bootstrap), 4)
round(obs - mean(X_bootstrap)/sd(X_bootstrap), 4)
obs
mean(X_bootstrap)
sd(X_bootstrap)
round((obs - mean(X_bootstrap))/sd(X_bootstrap), 4)
